import { useState } from 'react'
import { Canvas } from '@react-three/fiber'
import { useGLTF, Html, OrbitControls, Environment, ContactShadows, Center } from '@react-three/drei'
import { FaMapMarkerAlt } from 'react-icons/fa'
import { FaMapPin } from 'react-icons/fa'

function Model(props) {
  /*
  Auto-generated by: https://github.com/pmndrs/gltfjsx
  author: JasperTobias (https://sketchfab.com/JasperTobias)
  license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
  source: https://sketchfab.com/3d-models/lowpoly-earth-ce0cce9b528b47c7984bf0b2b600d705
  title: LowPoly Earth
  */
  const { nodes, materials } = useGLTF('/earth.gltf')
  return (
    <group rotation={[-Math.PI / 2, 0, Math.PI]} {...props} dispose={null}>
      <mesh geometry={nodes['URF-Height_Lampd_Ice_0'].geometry} material={materials.Lampd_Ice} />
      <mesh geometry={nodes['URF-Height_watr_0'].geometry} material={materials.watr} material-roughness={0} />
      <mesh geometry={nodes['URF-Height_Lampd_0'].geometry} material={materials.Lampd} material-color="lightgreen">
        <Marker rotation={[0.58, -2, -0.25]} position={[-0.27, 0.75, 0.81]} scale={0.5}>
          <div style={{ position: 'absolute', fontSize: 5, letterSpacing: -0.5, left: -2, top: -11, textAlign: 'right' }}>
            Takoma Nantes
          </div>
          <FaMapMarkerAlt style={{ color: '31A6AF' }} />
        </Marker>

        <Marker rotation={[1.2, -2.9, -0.32]} position={[-0.4, 0.68, 0.82]} scale={0.5}>
          <div style={{ position: 'absolute', fontSize: 5, letterSpacing: -0.5, left: -2, top: -11, textAlign: 'right' }}>
            Takoma Garches
          </div>
          <FaMapMarkerAlt style={{ color: 'fa4616' }} />
        </Marker>

        <Marker rotation={[0.3, -2.7, -0.7]} position={[-0.52, 0.76, 0.7]} scale={0.5}>
          <div style={{ position: 'absolute', fontSize: 6, letterSpacing: -0.5, left: -2, top: -11, textAlign: 'center' }}>Takoma Aix</div>
          <FaMapMarkerAlt style={{ color: '394877' }} />
        </Marker>

        <group position={[0, 0, 1.12]} rotation={[0, 0, Math.PI]} scale={0.5}>
          <Marker rotation={[0, Math.PI / 2, Math.PI / 2]}>
            <div style={{ position: 'absolute', fontSize: 6, letterSpacing: -0.5, left: 15.5 }}>PÃ´le Nord</div>
            <FaMapPin style={{ color: '8CC6D0' }} />
          </Marker>
        </group>
      </mesh>
    </group>
  )
}

// Let's make the marker into a component so that we can abstract some shared logic
function Marker({ children, ...props }) {
  // This holds the local occluded state
  const [occluded, occlude] = useState()
  return (
    <Html
      // 3D-transform contents
      transform
      // Hide contents "behind" other meshes
      occlude
      // Tells us when contents are occluded (or not)
      onOcclude={occlude}
      // We just interpolate the visible state into css opacity and transforms
      style={{ transition: 'all 0.2s', opacity: occluded ? 0 : 1, transform: `scale(${occluded ? 0.25 : 1})` }}
      {...props}>
      {children}
    </Html>
  )
}

export default function Viewer() {
  return (
    <Canvas camera={{ position: [3, 2, 3], fov: 45 }}>
      <ambientLight intensity={0.5} />
      <Model position={[0, 0.25, 0]} />
      <Environment preset="city" />
      <ContactShadows frames={1} scale={5} position={[0, -1, 0]} far={1} blur={5} opacity={0.5} color="#204080" />
      <OrbitControls />
    </Canvas>
  )
}
